#Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

include /etc/sway/config.d/*

# Include device specific config


# Logo key. Use Mod1 for Alt.
set $mod Mod4
set $browser firefox
set $files nautilus

# Device specific config
include ~/.config/sway/`hostname`

#input * xkb_options "caps:ctrl_modifier,compose:ralt"

### Variables
#
# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l
# Your preferred terminal emulator
set $term alacritty 
# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu bemenu

for_window [class="^.*"] border pixel 0

set $opacity 1
for_window [class=".*"] opacity $opacity
for_window [app_id=".*"] opacity $opacity
#for_window [app_id="^Alacritty.*$"] opacity 0.85

#exec dbus-update-activation-environment --systemd DISPLAY WAYLAND_DISPLAY SWAYSOCK XDG_CURRENT_DESKTOP=sway
# FIXME: Deprecated, needed for user slices
#exec systemctl --user import-environment

#
# Example configuration:
#
#   output HDMI-A-1 resolution 1920x1080 position 1920,0
#
# You can get the names of your outputs by running: swaymsg -t get_outputs
### Idle configuration
#set $swaylock swaylock-fancy -t "LOCKED" --daemonize -p

exec_always killall swayidle
exec_always swayidle -w \
          timeout 1500 '$swaylock' \
          timeout 900 'swaymsg "output * dpms off"' resume 'swaymsg "output * dpms on"' \
          before-sleep '$swaylock'


for_window [class="vlc"] inhibit_idle fullscreen

### Input configuration

exec_always swaymsg input "1133:16505:Logitech_G_Pro" {
    dwt disabled
    accel_profile adaptive
    pointer_accel -0.1
    scroll_factor 0.5
}

exec_always swaymsg input "type:keyboard" {
    repeat_rate 40
    repeat_delay 230
}

exec_always swaymsg input "1386:830:Wacom_Intuos_PT_M_2_Finger" {
	natural_scroll enabled
}

exec_always swaymsg input "1386:830:Wacom_Intuos_PT_M_2_Pen" {
	map_to_output DP-2
}

# You can get the names of your inputs by running: swaymsg -t get_inputs
# Read `man 5 sway-input` for more information about this section.

floating_modifier $mod

# Startup
# Handle with systemd user services!
#exec "waybar"
#exec systemctl --user start blueman-applet.service
#exec iwgtk -i

# Needs to be device specific
exec "mako -c $HOME/.config/mako/config.`hostname`"

# No systemd service / issues
exec protonmail-bridge --noninteractive
exec "kanshi"
exec "kdeconnect-indicator"

# Start anacron using $HOME/.anacron as cron job storage (symlinked to dotfiles)
#exec /usr/sbin/anacron -d -t $HOME/.anacron/etc/anacrontab -S $HOME/.anacron/spool &> $HOME/.anacron/anacron.log
# Start all the messaging stuff

# Hacky fix for xwayland links not opening with an error
    exec_always xdg-settings set default-web-browser firefox.desktop 

# Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

### Key bindings
#
# Basics:
#
bindsym {
    # Start a terminal
    $mod+Return     exec $term
    $mod+w          exec $browser
    $mod+e          exec $files
	# FIXME: for some reason vscode hits a TRAP unless systemd-run allocates a pty and I pass --wait to code, weird as this is only required when launching it
	# from sway.
#    $mod+x          exec systemd-run -t --user --slice=vscode.slice
    $mod+x          exec code --disable-gpu
    # Kill focused window
    $mod+q kill
    $mod+shift+q kill

    # Start your launcher
    $mod+d exec j4-dmenu-desktop --display-binary --dmenu='bemenu -i --nb "#3f3f3f" --nf "#dcdccc" --fn "JetBrains Mono 12"' --term='alacritty'

    # Screenshot
    Print exec $HOME/bin/scap.sh -u
    # Screenshot and send off
    Ctrl+Print exec $HOME/bin/scap.sh
    Shift+Print exec $HOME/bin/scap.sh -w

    # Reload the configuration file
    $mod+c reload


    # Dismiss notification
    Ctrl+Space exec makoctl dismiss
    Ctrl+grave exec makoctl restore
    $mod+Ctrl+l exec $swaylock
    # Moving around:
    #
    # Move your focus around
    $mod+$left focus left
    $mod+$down focus down
    $mod+$up focus up
    $mod+$right focus right

    # Move the focused window with the same, but add Shift
    $mod+Shift+$left move left
    $mod+Shift+$down move down
    $mod+Shift+$up move up
    $mod+Shift+$right move right
    # Ditto, with arrow keys
    $mod+Shift+Left move left
    $mod+Shift+Down move down
    $mod+Shift+Up move up
    $mod+Shift+Right move right

    # audio
    $mod+Down      exec playerctl -p spotify play-pause
    $mod+Right     exec playerctl -p spotify next
    $mod+Left      exec playerctl -p spotify previous
    $mod+Up        exec playerctl play-pause

    XF86AudioPlay      exec playerctl -p spotify play-pause
    XF86AudioNext     exec playerctl -p spotify next
    XF86AudioPrev      exec playerctl -p spotify previous

    XF86AudioMute        exec pamixer -t
    XF86AudioRaiseVolume exec pamixer -i 1
    XF86AudioLowerVolume exec pamixer -d 1

    XF86AudioMicMute        exec pamixer --source 3916 -t

    # backlight
    XF86MonBrightnessUp exec light -T 1.5
    XF86MonBrightnessDown exec light -T 0.6

    #
    # Layout stuff:
    #
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    $mod+g splith
    $mod+v splitv

    # Switch the current container between different layout styles
    $mod+s layout tabbed

    # Make the current focus fullscreen
    $mod+f fullscreen
    # Keep window on all workspaces
    $mod+Shift+f sticky toggle
    # Toggle the current focus between tiling and floating mode
    $mod+space floating toggle

    # Swap focus between the tiling area and the floating area
    $mod+Shift+space focus mode_toggle

    # Move focus to the parent container
    $mod+a focus parent

    # size (conflicts with vscode "insert cursor above/below")
    Shift+Mod1+Up    resize shrink height 20 px or 2 ppt
    Shift+Mod1+Down  resize grow   height 20 px or 2 ppt
    Shift+Mod1+Left  resize shrink width  20 px or 2 ppt
    Shift+Mod1+Right resize grow   width  20 px or 2 ppt

    # OBS
    Ctrl+F1 exec obs-cli scene switch "Scene"
    Ctrl+F2 exec obs-cli scene switch "Scene 2"
    Ctrl+F3 exec obs-cli scene switch "Scene 3"

    # RRST phone control
    $mod+Shift+e exec notify-send "Resetting..." && notify-send "$(rrst reset)"
    $mod+Ctrl+r exec notify-send "$(rrst release)"
    $mod+Shift+r exec notify-send "Rebooting to fastboot" && notify-send "$(rrst bootloader)"
    $mod+Ctrl+up exec rrst up
    $mod+Ctrl+Return exec rrst pwr
}

bindcode $mod+Ctrl+94 exec rrst baud

#
# workspaces
#
set $WS1  "1"
set $WS2  "2"
set $WS3  "3"
set $WS4  "4"
set $WS5  "5"
set $WS6  "6"
set $WS7  "7"
set $WS8  "8"
set $WS9  "9"
set $WS10 "10"
set $WS11 "11"
set $WS12 "12"
set $WS13 "{"
set $WS14 "}"
set $WS15 "@"
set $WS16 "~"
set $WS17 "b"
set $WS18 "n"
set $WS19 "m"
set $WS20 ","
set $WS21 "."
set $WS22 "/"
set $WS23 ";"
set $WS24 "p"

# workspace assignment
workspace $WS1  output $Mon1
workspace $WS2  output $Mon1
workspace $WS3  output $Mon1
workspace $WS4  output $Mon1
workspace $WS5  output $Mon1
workspace $WS6  output $Mon1
workspace $WS7  output $Mon1
workspace $WS8  output $Mon1
workspace $WS9  output $Mon1
workspace $WS10 output $Mon1
workspace $WS11 output $Mon2
workspace $WS12 output $Mon2
workspace $WS13 output $Mon2
workspace $WS14 output $Mon2
workspace $WS15 output $Mon3
workspace $WS16 output $Mon3
workspace $WS17 output $Mon3
workspace $WS18 output $Mon3
workspace $WS19 output $Mon3
workspace $WS24 output $Mon3
workspace $WS20 output $Mon4 $Mon3
workspace $WS21 output $Mon4 $Mon3
workspace $WS22 output $Mon4 $Mon3
workspace $WS23 output $Mon4 $Mon3


bindsym {
    # switch to workspace
    $mod+1       workspace $WS1
    $mod+2       workspace $WS2
    $mod+3       workspace $WS3
    $mod+4       workspace $WS4
    $mod+5       workspace $WS5
    $mod+6       workspace $WS6
    $mod+7       workspace $WS7
    $mod+8       workspace $WS8
    $mod+9       workspace $WS9
    $mod+0       workspace $WS10
    $mod+minus   workspace $WS11
    $mod+equal   workspace $WS12
    $mod+bracketleft workspace $WS13
    $mod+bracketright workspace $WS14
    $mod+apostrophe   workspace $WS15
    $mod+numbersign    workspace $WS16
    $mod+grave    workspace $WS16
    $mod+b            workspace $WS17
    $mod+n            workspace $WS18
    $mod+m            workspace $WS19
    $mod+comma        workspace $WS20
    $mod+period       workspace $WS21
    $mod+slash        workspace $WS22
    $mod+semicolon    workspace $WS23
    $mod+p		workspace $WS24

    # move focused container to workspace
    $mod+Shift+1      move container to workspace $WS1;  workspace $WS1
    $mod+Shift+2      move container to workspace $WS2;  workspace $WS2
    $mod+Shift+3      move container to workspace $WS3;  workspace $WS3
    $mod+Shift+4      move container to workspace $WS4;  workspace $WS4
    $mod+Shift+5      move container to workspace $WS5;  workspace $WS5
    $mod+Shift+6      move container to workspace $WS6;  workspace $WS6
    $mod+Shift+7      move container to workspace $WS7;  workspace $WS7
    $mod+Shift+8      move container to workspace $WS8;  workspace $WS8
    $mod+Shift+9      move container to workspace $WS9;  workspace $WS9
    $mod+Shift+0      move container to workspace $WS10; workspace $WS10
    $mod+Shift+minus  move container to workspace $WS11; workspace $WS11
    $mod+Shift+equal  move container to workspace $WS12; workspace $WS12
    $mod+Shift+bracketleft  move container to workspace $WS13; workspace $WS13
    $mod+Shift+bracketright move container to workspace $WS14; workspace $WS14
    $mod+Shift+apostrophe   move container to workspace $WS15; workspace $WS15
    $mod+Shift+numbersign   move container to workspace $WS16; workspace $WS16
    $mod+Shift+grave   move container to workspace $WS16; workspace $WS16
    $mod+Shift+b  move container to workspace $WS17; workspace $WS17
    $mod+Shift+n  move container to workspace $WS18; workspace $WS18
    $mod+Shift+m  move container to workspace $WS19; workspace $WS19
    $mod+Shift+comma move container to workspace $WS20; workspace $WS20
    $mod+Shift+period   move container to workspace $WS21; workspace $WS21
    $mod+Shift+slash   move container to workspace $WS22; workspace $WS22
    $mod+Shift+semicolon   move container to workspace $WS23; workspace $WS23
    $mod+Shift+p	move container to workspace $WS24; workspace $WS24

    # Send container (don't also switch to the workspace)
    $mod+Ctrl+1               move container to workspace $WS1
    $mod+Ctrl+2               move container to workspace $WS2
    $mod+Ctrl+3               move container to workspace $WS3
    $mod+Ctrl+4               move container to workspace $WS4
    $mod+Ctrl+5               move container to workspace $WS5
    $mod+Ctrl+6               move container to workspace $WS6
    $mod+Ctrl+7               move container to workspace $WS7
    $mod+Ctrl+8               move container to workspace $WS8
    $mod+Ctrl+9               move container to workspace $WS9
    $mod+Ctrl+0               move container to workspace $WS10
    $mod+Ctrl+minus           move container to workspace $WS11
    $mod+Ctrl+equal           move container to workspace $WS12
    $mod+Ctrl+bracketleft    move container to workspace $WS13
    $mod+Ctrl+bracketright   move container to workspace $WS14
    $mod+Ctrl+apostrophe     move container to workspace $WS15
    $mod+Ctrl+numbersign     move container to workspace $WS16
    $mod+Ctrl+grave     move container to workspace $WS16
    $mod+Ctrl+b  move container to workspace $WS17
    $mod+Ctrl+n  move container to workspace $WS18
    $mod+Ctrl+m  move container to workspace $WS19
    $mod+Ctrl+comma move container to workspace $WS20
    $mod+Ctrl+period   move container to workspace $WS21
    $mod+Ctrl+slash   move container to workspace $WS22
    $mod+Ctrl+semicolon   move container to workspace $WS23
    $mod+Ctrl+p		move container to workspace $WS24

    $mod+Shift+BackSpace scratchpad show
}

# Start some daemons
exec /usr/lib/polkit-gnome/polkit-gnome-authentication-agent-1 

# Application defaults
for_window [class="Spotify"] move container to workspace $WS16
assign [app_id="fluffychat"] → $WS15
#for_window [class="Element"] focus
assign [class="discord"] → $WS15
assign [class="SchildiChat"] → $WS15
assign [app_id="telegramdesktop"] → $WS15
#for_window [class="telegramdesktop"] focus
#assign [app_id="thunderbird"] → $WS15
for_window [class="thunderbird"] move container to workspace $WS15
# Jank to make workspace 15 tabbed for socials
#exec swaymsg "workspace $WS15; layout tabbed; workspace $WS1"


# Floating stuff
for_window [class="cnes"] floating enable
for_window [class="notch-viewer"] floating enable
for_window [class="pritunl"] floating enable
for_window [class="REAPER"] floating enable
for_window [app_id="qemu"] floating enable
# winetricks
for_window [app_id="^zenity$"] floating enable
# prevent chrome from floating when i open unity docs
for_window [app_id="^google-chrome$"] floating disable
for_window [app_id="org.twosheds.iwgtk"] {
	floating enable
	move position 1460 px 20 px
}

# UI applications to autostart

exec element-desktop 
exec telegram-desktop
exec vencord-desktop
exec spotify
#exec env MOZ_ENABLE_WAYLAND=1 /usr/lib/thunderbird/thunderbird
exec betterbird
exec gammastep-indicator

default_border none
hide_edge_borders both

# Yuckiness because the above doesn't work
font JetBrains mono 10
titlebar_border_thickness 0
titlebar_padding 1

# The best config option :D - breaks "move container to workspace"
#workspace_auto_back_and_forth yes

# vim: set ts=4 tw=0


